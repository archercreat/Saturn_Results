
      /\
     (  )
     (  )
     (  )
    /|/\|\
   /_||||_\ - SaturnV
     /__\
    (*#*)
     (*#)
      (#*)
      (*)

[*] Recovering the function ...

    1: 1: 0x140001000: sub rsp, 0x38
    1: 2: 0x140001004: lea rax, qword ptr [rip + 0x1bff5]
    1: 3: 0x14000100b: mov r9, rax
    1: 4: 0x14000100e: mov r10, rax
    1: 5: 0x140001011: mov dword ptr [rsp + 0x34], r8d
    1: 6: 0x140001016: mov dword ptr [rsp + 0x30], edx
    1: 7: 0x14000101a: mov dword ptr [rsp + 0x2c], ecx
    1: 8: 0x14000101e: mov qword ptr [rsp + 0x20], rax
    1: 9: 0x140001023: mov qword ptr [rsp + 0x18], r10
    1: 10: 0x140001028: mov qword ptr [rsp + 0x10], r9
    1: 11: 0x14000102d: mov dword ptr [rsp + 0xc], 0
    1: 12: 0x140001035: cmp dword ptr [rsp + 0xc], 2
    1: 13: 0x14000103a: jge 0x140001065

[*] Tried to recover Opaque Predicate/Edges in 0.0280s
[*] Edges: 1
(0x140001040) 

    2: 14: 0x140001040: mov rax, qword ptr [rsp + 0x10]
    2: 15: 0x140001045: movsxd rcx, dword ptr [rsp + 0xc]
    2: 16: 0x14000104a: mov edx, dword ptr [rax + rcx*4]
    2: 17: 0x14000104d: add edx, dword ptr [rsp + 0x30]
    2: 18: 0x140001051: mov dword ptr [rsp + 0x30], edx
    2: 19: 0x140001055: mov eax, dword ptr [rsp + 0xc]
    2: 20: 0x140001059: add eax, 1
    2: 21: 0x14000105c: mov dword ptr [rsp + 0xc], eax
    2: 22: 0x140001060: jmp 0x140001035

[!] Splitting the basic block 0x140001000 at 0x140001035

    2: 23: 0x140001000: sub rsp, 0x38
    2: 24: 0x140001004: lea rax, qword ptr [rip + 0x1bff5]
    2: 25: 0x14000100b: mov r9, rax
    2: 26: 0x14000100e: mov r10, rax
    2: 27: 0x140001011: mov dword ptr [rsp + 0x34], r8d
    2: 28: 0x140001016: mov dword ptr [rsp + 0x30], edx
    2: 29: 0x14000101a: mov dword ptr [rsp + 0x2c], ecx
    2: 30: 0x14000101e: mov qword ptr [rsp + 0x20], rax
    2: 31: 0x140001023: mov qword ptr [rsp + 0x18], r10
    2: 32: 0x140001028: mov qword ptr [rsp + 0x10], r9
    2: 33: 0x14000102d: mov dword ptr [rsp + 0xc], 0

    3: 34: 0x140001035: cmp dword ptr [rsp + 0xc], 2
    3: 35: 0x14000103a: jge 0x140001065
[*] Predecessors: 2
0x140001035: (0x140001000 =>  1 ) (0x140001040 =>  ? ) 

[*] Tried to recover Opaque Predicate/Edges in 0.0600s
[*] Edges: 2
(0x140001065) (0x140001040) 
[*] Opaquenes of 0x140001035 has changed to Non Opaque!
[*] Predecessors: 2
0x140001035: (0x140001000 =>  1 ) (0x140001040 =>  0 ) 
[*] All edges are resolved nothing to do here!
[*] Predecessors: 2
0x140001035: (0x140001000 =>  1 ) (0x140001040 =>  0 ) 
[*] All edges are resolved nothing to do here!
[!] We got 2 edges ... verify if this is ok! ( 1 - 0 )

    4: 36: 0x140001065: mov dword ptr [rsp + 8], 0
    4: 37: 0x14000106d: cmp dword ptr [rsp + 8], 4
    4: 38: 0x140001072: jge 0x14000109e

[*] Tried to recover Opaque Predicate/Edges in 0.0240s
[*] Edges: 1
(0x140001078) 

[!] Loop detected to the beginning of basic block 0x140001040

    5: 39: 0x140001078: mov rax, qword ptr [rsp + 0x18]
    5: 40: 0x14000107d: movsxd rcx, dword ptr [rsp + 8]
    5: 41: 0x140001082: movzx edx, word ptr [rax + rcx*2]
    5: 42: 0x140001086: add edx, dword ptr [rsp + 0x30]
    5: 43: 0x14000108a: mov dword ptr [rsp + 0x30], edx
    5: 44: 0x14000108e: mov eax, dword ptr [rsp + 8]
    5: 45: 0x140001092: add eax, 1
    5: 46: 0x140001095: mov dword ptr [rsp + 8], eax
    5: 47: 0x140001099: jmp 0x14000106d

[!] Splitting the basic block 0x140001065 at 0x14000106d

    5: 48: 0x140001065: mov dword ptr [rsp + 8], 0

    6: 49: 0x14000106d: cmp dword ptr [rsp + 8], 4
    6: 50: 0x140001072: jge 0x14000109e
[*] Predecessors: 2
0x14000106d: (0x140001065 =>  1 ) (0x140001078 =>  ? ) 

[*] Tried to recover Opaque Predicate/Edges in 0.0580s
[*] Edges: 2
(0x14000109e) (0x140001078) 
[*] Opaquenes of 0x14000106d has changed to Non Opaque!
[*] Predecessors: 2
0x14000106d: (0x140001065 =>  1 ) (0x140001078 =>  0 ) 
[*] All edges are resolved nothing to do here!
[*] Predecessors: 2
0x14000106d: (0x140001065 =>  1 ) (0x140001078 =>  0 ) 
[*] All edges are resolved nothing to do here!
[!] We got 2 edges ... verify if this is ok! ( 2 - 0 )

    7: 51: 0x14000109e: mov dword ptr [rsp + 4], 0
    7: 52: 0x1400010a6: cmp dword ptr [rsp + 4], 8
    7: 53: 0x1400010ab: jge 0x1400010d7

[*] Tried to recover Opaque Predicate/Edges in 0.0230s
[*] Edges: 1
(0x1400010b1) 

[!] Loop detected to the beginning of basic block 0x140001078

    8: 54: 0x1400010b1: mov rax, qword ptr [rsp + 0x20]
    8: 55: 0x1400010b6: movsxd rcx, dword ptr [rsp + 4]
    8: 56: 0x1400010bb: movzx edx, byte ptr [rax + rcx]
    8: 57: 0x1400010bf: add edx, dword ptr [rsp + 0x30]
    8: 58: 0x1400010c3: mov dword ptr [rsp + 0x30], edx
    8: 59: 0x1400010c7: mov eax, dword ptr [rsp + 4]
    8: 60: 0x1400010cb: add eax, 1
    8: 61: 0x1400010ce: mov dword ptr [rsp + 4], eax
    8: 62: 0x1400010d2: jmp 0x1400010a6

[!] Splitting the basic block 0x14000109e at 0x1400010a6

    8: 63: 0x14000109e: mov dword ptr [rsp + 4], 0

    9: 64: 0x1400010a6: cmp dword ptr [rsp + 4], 8
    9: 65: 0x1400010ab: jge 0x1400010d7
[*] Predecessors: 2
0x1400010a6: (0x14000109e =>  1 ) (0x1400010b1 =>  ? ) 

[*] Tried to recover Opaque Predicate/Edges in 0.0590s
[*] Edges: 2
(0x1400010d7) (0x1400010b1) 
[*] Opaquenes of 0x1400010a6 has changed to Non Opaque!
[*] Predecessors: 2
0x1400010a6: (0x14000109e =>  1 ) (0x1400010b1 =>  0 ) 
[*] All edges are resolved nothing to do here!
[*] Predecessors: 2
0x1400010a6: (0x14000109e =>  1 ) (0x1400010b1 =>  0 ) 
[*] All edges are resolved nothing to do here!
[!] We got 2 edges ... verify if this is ok! ( 3 - 0 )

   10: 66: 0x1400010d7: movzx eax, byte ptr [rip + 0x1bf22]
   10: 67: 0x1400010de: add eax, dword ptr [rsp + 0x30]
   10: 68: 0x1400010e2: mov dword ptr [rsp + 0x30], eax
   10: 69: 0x1400010e6: movzx eax, byte ptr [rip + 0x1bf14]
   10: 70: 0x1400010ed: add eax, dword ptr [rsp + 0x30]
   10: 71: 0x1400010f1: mov dword ptr [rsp + 0x30], eax
   10: 72: 0x1400010f5: movzx eax, byte ptr [rip + 0x1bf06]
   10: 73: 0x1400010fc: add eax, dword ptr [rsp + 0x30]
   10: 74: 0x140001100: mov dword ptr [rsp + 0x30], eax
   10: 75: 0x140001104: movzx eax, byte ptr [rip + 0x1bef8]
   10: 76: 0x14000110b: add eax, dword ptr [rsp + 0x30]
   10: 77: 0x14000110f: mov dword ptr [rsp + 0x30], eax
   10: 78: 0x140001113: movzx eax, byte ptr [rip + 0x1beea]
   10: 79: 0x14000111a: add eax, dword ptr [rsp + 0x30]
   10: 80: 0x14000111e: mov dword ptr [rsp + 0x30], eax
   10: 81: 0x140001122: movzx eax, byte ptr [rip + 0x1bedc]
   10: 82: 0x140001129: add eax, dword ptr [rsp + 0x30]
   10: 83: 0x14000112d: mov dword ptr [rsp + 0x30], eax
   10: 84: 0x140001131: movzx eax, byte ptr [rip + 0x1bece]
   10: 85: 0x140001138: add eax, dword ptr [rsp + 0x30]
   10: 86: 0x14000113c: mov dword ptr [rsp + 0x30], eax
   10: 87: 0x140001140: movzx eax, byte ptr [rip + 0x1bec0]
   10: 88: 0x140001147: add eax, dword ptr [rsp + 0x30]
   10: 89: 0x14000114b: mov dword ptr [rsp + 0x30], eax
   10: 90: 0x14000114f: movzx eax, word ptr [rip + 0x1beaa]
   10: 91: 0x140001156: add eax, dword ptr [rsp + 0x30]
   10: 92: 0x14000115a: mov dword ptr [rsp + 0x30], eax
   10: 93: 0x14000115e: movzx eax, word ptr [rip + 0x1be9d]
   10: 94: 0x140001165: add eax, dword ptr [rsp + 0x30]
   10: 95: 0x140001169: mov dword ptr [rsp + 0x30], eax
   10: 96: 0x14000116d: movzx eax, word ptr [rip + 0x1be90]
   10: 97: 0x140001174: add eax, dword ptr [rsp + 0x30]
   10: 98: 0x140001178: mov dword ptr [rsp + 0x30], eax
   10: 99: 0x14000117c: movzx eax, word ptr [rip + 0x1be83]
   10: 100: 0x140001183: add eax, dword ptr [rsp + 0x30]
   10: 101: 0x140001187: mov dword ptr [rsp + 0x30], eax
   10: 102: 0x14000118b: mov eax, dword ptr [rip + 0x1be73]
   10: 103: 0x140001191: add eax, dword ptr [rsp + 0x30]
   10: 104: 0x140001195: mov dword ptr [rsp + 0x30], eax
   10: 105: 0x140001199: mov eax, dword ptr [rip + 0x1be61]
   10: 106: 0x14000119f: add eax, dword ptr [rsp + 0x30]
   10: 107: 0x1400011a3: mov dword ptr [rsp + 0x30], eax
   10: 108: 0x1400011a7: mov rcx, qword ptr [rip + 0x1be52]
   10: 109: 0x1400011ae: movsxd rdx, dword ptr [rsp + 0x30]
   10: 110: 0x1400011b3: add rdx, rcx
   10: 111: 0x1400011b6: mov eax, edx
   10: 112: 0x1400011b8: mov dword ptr [rsp + 0x30], eax
   10: 113: 0x1400011bc: mov rcx, qword ptr [rip + 0x1be3d]
   10: 114: 0x1400011c3: movsxd rdx, dword ptr [rsp + 0x30]
   10: 115: 0x1400011c8: add rdx, rcx
   10: 116: 0x1400011cb: mov eax, edx
   10: 117: 0x1400011cd: mov dword ptr [rsp + 0x30], eax
   10: 118: 0x1400011d1: mov eax, dword ptr [rsp + 0x30]
   10: 119: 0x1400011d5: add rsp, 0x38
   10: 120: 0x1400011d9: ret 

[*] Tried to recover Opaque Predicate/Edges in 0.0510s
[*] Edges: 0


[*] Tried to recover Opaque Predicate/Edges in 0.0510s
[*] Edges: 0


[!] Loop detected to the beginning of basic block 0x1400010b1
[*] Building the control flow graph ...
[*] Time taken to recover the function : 0.4280s
[*] Applying post translation optimization ...
[!] No SymbolicState variable found!
[!] No SymbolicState variable found!
[!] No SymbolicState variable found!
[*] Stack Size 5000
[*] 11 Stack Slots found
-5000  1 uses - Size: 4948 Aligned: 1 Overlapping: 0  AlignedStart: -5000  AlignedEnd: -48  AlignedSize: 4952  AlignedOverlapping: 1  AlignedOverlappingSize: 4952 
-52  1 uses - Size: 4 Aligned: 0 Overlapping: 0  AlignedStart: -56  AlignedEnd: -48  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 4952 
-48  1 uses - Size: 4 Aligned: 1 Overlapping: 0  AlignedStart: -48  AlignedEnd: -40  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 8 
-44  1 uses - Size: 4 Aligned: 0 Overlapping: 0  AlignedStart: -48  AlignedEnd: -40  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 8 
-40  1 uses - Size: 8 Aligned: 1 Overlapping: 0  AlignedStart: -40  AlignedEnd: -32  AlignedSize: 8  AlignedOverlapping: 0  AlignedOverlappingSize: 0 
-32  1 uses - Size: 8 Aligned: 1 Overlapping: 0  AlignedStart: -32  AlignedEnd: -24  AlignedSize: 8  AlignedOverlapping: 0  AlignedOverlappingSize: 0 
-24  1 uses - Size: 12 Aligned: 1 Overlapping: 0  AlignedStart: -24  AlignedEnd: -8  AlignedSize: 16  AlignedOverlapping: 1  AlignedOverlappingSize: 16 
-12  1 uses - Size: 4 Aligned: 0 Overlapping: 0  AlignedStart: -16  AlignedEnd: -8  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 16 
-8  1 uses - Size: 4 Aligned: 1 Overlapping: 0  AlignedStart: -8  AlignedEnd: 0  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 8 
-4  1 uses - Size: 4 Aligned: 0 Overlapping: 0  AlignedStart: -8  AlignedEnd: 0  AlignedSize: 8  AlignedOverlapping: 1  AlignedOverlappingSize: 8 
0  1 uses - Size: 8 Aligned: 1 Overlapping: 0  AlignedStart: 0  AlignedEnd: 8  AlignedSize: 8  AlignedOverlapping: 0  AlignedOverlappingSize: 0 
[*] Time taken to optimize the function: 0.6220s
[*] Applying custom post translation optimization ...
[*] Detected Argument Count: 2
[!] Done!
[*] Creating Gadgets ...
[*] Writing patched binary to test_.exe
[!] Done!
[*] Writing LLVM IR to lifted.ll ... Done!
[*] Recovered Basic Blocks : 10
[*] Recovered Opaque Predicates : 0
