__int64 __fastcall F_140001090_args(int a1)
{
  __int64 v1; // rax
  int *v2; // rax
  __int64 v3; // rcx
  char *v4; // rcx
  unsigned int v5; // edi
  int v6; // edx
  char *v8; // [rsp+1268h] [rbp-14C0h]
  char v9; // [rsp+1270h] [rbp-14B8h]
  char v10[12]; // [rsp+1378h] [rbp-13B0h]
  int v11; // [rsp+1384h] [rbp-13A4h]

  v1 = 5368827920i64;
  v11 = a1;
  v8 = &v9;
  while ( 1 )
  {
    switch ( *v1 + 14 )
    {
      case 0:
        v2 = (v1 + 1);
        if ( *v8 )
          v3 = *v2;
        else
          v3 = 4i64;
        v1 = v2 + v3;
        v8 -= 8;
        break;
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 24:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
        continue;
      case 12:
        ++v1;
        *v8 = **v8;
        break;
      case 23:
        v1 += *(v1 + 1) + 1i64;
        break;
      case 25:
        return *v8;
      case 46:
        ++v1;
        v4 = v8;
        v5 = (*(v8 - 2) - *v8) >> 31;
        v6 = (((*(v8 - 2) >> 31) ^ (*v8 >> 31)) + (v5 ^ (*(v8 - 2) >> 31)) == 2) ^ (v5 != 0);
LABEL_17:
        *(v4 - 2) = v6;
        v8 -= 8;
        break;
      case 56:
        *(v8 + 2) = *(v1 + 1);
LABEL_2:
        v8 += 8;
        v1 += 5i64;
        break;
      default:
        switch ( *v1 + 95 )
        {
          case 0:
            ++v1;
            **(v8 - 1) = *v8;
            v8 -= 16;
            break;
          case 14:
            *(v8 - 2) += *v8;
            ++v1;
            v8 -= 8;
            break;
          case 20:
            *(v8 + 1) = &v10[*(v1 + 1)];
            goto LABEL_2;
          case 23:
            if ( !*(v1 + 1) )
              *(v8 + 1) = &v11;
            goto LABEL_2;
          case 33:
            ++v1;
            v4 = v8;
            v6 = *v8 * *(v8 - 2);
            goto LABEL_17;
          default:
            continue;
        }
        break;
    }
  }
}